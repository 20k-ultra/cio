on:
  schedule:
    - cron: "*/60 * * * *"
name: run db updates
jobs:
  cargotest:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/checkout@v2
        with:
          repository: oxidecomputer/rfd
          token: ${{ secrets.GLOBAL_GITHUB_TOKEN }}
          path: rfd
      - name: Install asciidoctor, pandoc, and pdftotext
        shell: bash
        run: |
          sudo apt update -y && sudo apt install -y asciidoctor pandoc poppler-utils ruby
          sudo gem install asciidoctor-pdf rouge
      - name: Install SQL proxy
        shell: bash
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy \
          && chmod +x cloud_sql_proxy
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Cache github etags
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: github-cache
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Set up environment
        shell: bash
        run: |
          echo "$GSUITE_KEY" > ${{ github.workspace }}/gsuite_key \
          && echo "$SQL_PROXY_KEY" > ${{ github.workspace }}/sql_proxy_key
        env:
          GSUITE_KEY: ${{ secrets.GSUITE_KEY }}
          SQL_PROXY_KEY: ${{ secrets.SQL_PROXY_KEY }}
      - name: Start the sql_proxy
        shell: bash
        run: |
          ./cloud_sql_proxy -instances=${{ secrets.INSTANCE_CONNECTION_NAME }}=tcp:5432 \
                  -credential_file=${{ github.workspace }}/sql_proxy_key &
      - name: Run cargo test
        run: |
          cargo test test_cron -- --ignored
        shell: bash
        env:
          CIO_AUTH0_CLIENT_ID: ${{ secrets.CIO_AUTH0_CLIENT_ID }}
          CIO_AUTH0_CLIENT_SECRET: ${{ secrets.CIO_AUTH0_CLIENT_SECRET }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          CIO_DATABASE_URL: ${{ secrets.CIO_DATABASE_URL }}
          GITHUB_ORG: oxidecomputer
          GADMIN_CREDENTIAL_FILE: ${{ github.workspace }}/gsuite_key
          GADMIN_SUBJECT: ${{ secrets.GADMIN_SUBJECT }}
          GADMIN_ACCOUNT_ID: ${{ secrets.GADMIN_ACCOUNT_ID }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SLACK_HIRING_CHANNEL_POST_URL: ${{ secrets.SLACK_HIRING_CHANNEL_POST_URL }}
          GH_INSTALLATION_ID: ${{ secrets.GH_INSTALLATION_ID }}
          GH_APP_ID: ${{ secrets.GH_APP_ID }}
          GH_PRIVATE_KEY: ${{ secrets.GH_PRIVATE_KEY }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          INFLUX_DB_URL: ${{ secrets.INFLUX_DB_URL }}
          INFLUX_DB_TOKEN: ${{ secrets.INFLUX_DB_TOKEN }}
