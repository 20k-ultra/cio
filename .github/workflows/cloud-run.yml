name: cloud-run

on:
  push:
    branches:
    - master

env:
  PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  RUN_REGION: us-central1
  SERVICE_NAME: webhooky

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
        token: ${{ secrets.GLOBAL_GITHUB_TOKEN }}

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}
        project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

    # Build and push image to Google Container Registry
    - name: Build
      run: |-
        cd webhooky && gcloud builds submit \
          --quiet \
          --timeout 2h \
          --machine-type n1-highcpu-32 \
          --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"
    # Deploy image to Cloud Run
    - name: Deploy
      run: |-
        gcloud run deploy "$SERVICE_NAME" \
          --quiet \
          --region "$RUN_REGION" \
          --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
          --cpu 2 \
          --memory 2Gi \
          --platform "managed" \
          --add-cloudsql-instances "${{ secrets.INSTANCE_CONNECTION_NAME }}" \
          --set-env-vars "GADMIN_SUBJECT=${{secrets.GADMIN_SUBJECT}},CIO_DATABASE_URL=${{secrets.DATABASE_URL}},INSTANCE_CONNECTION_NAME=${{secrets.INSTANCE_CONNECTION_NAME}},RUST_BACKTRACE=1,SLACK_PUBLIC_RELATIONS_CHANNEL_POST_URL=${{secrets.SLACK_PUBLIC_RELATIONS_CHANNEL_POST_URL}},AIRTABLE_API_KEY=${{secrets.AIRTABLE_API_KEY}},GITHUB_TOKEN=${{secrets.GLOBAL_GITHUB_TOKEN}},GITHUB_ORG=oxidecomputer,GSUITE_KEY_ENCODED=${{secrets.GSUITE_KEY_ENCODED}},GH_APP_ID=${{secrets.GH_APP_ID}},GH_PRIVATE_KEY=${{secrets.GH_PRIVATE_KEY}},GH_INSTALLATION_ID=${{secrets.GH_INSTALLATION_ID}},INFLUX_DB_URL=${{secrets.INFLUX_DB_URL}},INFLUX_DB_TOKEN=${{secrets.INFLUX_DB_TOKEN}},SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }},LIGHTSTEP_ACCESS_TOKEN=${{secrets.LIGHTSTEP_ACCESS_TOKEN}},SLACK_HIRING_CHANNEL_POST_URL=${{secrets.SLACK_HIRING_CHANNEL_POST_URL}},SHIPPO_API_TOKEN=${{secrets.SHIPPO_API_TOKEN}},PRINTER_URL=${{secrets.PRINTER_URL}},GADMIN_ACCOUNT_ID=${{secrets.GADMIN_ACCOUNT_ID}},TAILSCALE_API_KEY=${{secrets.TAILSCALE_API_KEY}},TAILSCALE_DOMAIN=${{secrets.TAILSCALE_DOMAIN}},AIRTABLE_ENTERPRISE_ACCOUNT_ID=${{secrets.AIRTABLE_ENTERPRISE_ACCOUNT_ID}},WEBHOOKY_SENTRY_DSN=${{secrets.WEBHOOKY_SENTRY_DSN}},SLACK_TOKEN=${{secrets.SLACK_TOKEN}},CLOUDFLARE_EMAIL=${{secrets.CLOUDFLARE_EMAIL}},CLOUDFLARE_TOKEN=${{secrets.CLOUDFLARE_TOKEN}},OKTA_API_TOKEN=${{secrets.OKTA_API_TOKEN}},OKTA_DOMAIN=${{secrets.OKTA_DOMAIN}},CHECKR_API_KEY=${{secrets.CHECKR_API_KEY}}" \
          --max-instances=5 \
          --allow-unauthenticated
    - name: Extract revision
      shell: bash
      run: REVISION=$(gcloud run revisions list --platform managed --region "$RUN_REGION" --service $SERVICE_NAME --sort-by ~deployed --limit 1 --quiet | sed -n '2 p' | awk '{print $2}'); echo "::set-output name=version::${REVISION/webhooky-/}"
      id: extract_version
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.extract_version.outputs.version }}
        release_name: ${{ steps.extract_version.outputs.version }}
        draft: false
        prerelease: false
