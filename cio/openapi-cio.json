{
  "openapi": "3.0.3",
  "info": {
    "title": "CIO API",
    "description": "Internal API server for information about the company, employess, etc",
    "contact": {
      "url": "https://oxide.computer",
      "email": "cio@oxide.computer"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/": {
      "get": {
        "description": "Return the OpenAPI schema in JSON format.",
        "operationId": "api_get_schema",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/applicants": {
      "get": {
        "description": "Fetch all applicants.",
        "operationId": "api_get_applicants",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Applicant",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Applicant"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "description": "Fetch all auth users.",
        "operationId": "api_get_auth_users",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_AuthUser",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/buildings": {
      "get": {
        "description": "Fetch a list of office buildings.",
        "operationId": "api_get_buildings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Building",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Building"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conference_rooms": {
      "get": {
        "description": "Fetch a list of conference rooms.",
        "operationId": "api_get_conference_rooms",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_ConferenceRoom",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceRoom"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/github/repos": {
      "get": {
        "description": "Fetch a list of our GitHub repositories.",
        "operationId": "api_get_github_repos",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_GithubRepo",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GithubRepo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "description": "Fetch a list of Google groups.",
        "operationId": "api_get_groups",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Group",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journal_club_meetings": {
      "get": {
        "description": "Fetch a list of journal club meetings.",
        "operationId": "api_get_journal_club_meetings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_JournalClubMeeting",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalClubMeeting"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/links": {
      "get": {
        "description": "Fetch a list of internal links.",
        "operationId": "api_get_links",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Link",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mailing_list_subscribers": {
      "get": {
        "description": "Fetch a list of mailing list subscribers.",
        "operationId": "api_get_mailing_list_subscribers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_MailingListSubscriber",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailingListSubscriber"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rfds": {
      "get": {
        "description": "Fetch all RFDs.",
        "operationId": "api_get_rfds",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_RFD",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RFD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Fetch a list of employees.",
        "operationId": "api_get_users",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_User",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Applicant": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "analysis_samples": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "criminal_background_check_status": {
            "type": "string"
          },
          "docusign_envelope_id": {
            "description": "These fields are used by the DocuSign integration.",
            "type": "string"
          },
          "docusign_envelope_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "exploratory_samples": {
            "type": "string"
          },
          "geocode_cache": {
            "description": "This field is used by Airtable for mapping the location data.",
            "type": "string"
          },
          "github": {
            "type": "string"
          },
          "gitlab": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "interested_in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interview_packet": {
            "type": "string"
          },
          "interviews": {
            "description": "Airtable fields.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkedin": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "materials": {
            "type": "string"
          },
          "materials_contents": {
            "type": "string"
          },
          "motor_vehicle_background_check_status": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "portfolio": {
            "type": "string"
          },
          "presentation_samples": {
            "type": "string"
          },
          "question_happiest": {
            "type": "string"
          },
          "question_proud_of": {
            "type": "string"
          },
          "question_technically_challenging": {
            "type": "string"
          },
          "question_unhappiest": {
            "type": "string"
          },
          "question_value_reflected": {
            "type": "string"
          },
          "question_value_violated": {
            "type": "string"
          },
          "question_values_in_tension": {
            "type": "string"
          },
          "question_why_oxide": {
            "type": "string"
          },
          "raw_status": {
            "type": "string"
          },
          "request_background_check": {
            "type": "boolean"
          },
          "resume": {
            "type": "string"
          },
          "resume_contents": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "scorers": {
            "description": "The scorers/reviewers assigned to the applicant.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scorers_completed": {
            "description": "The scorers_completed field means the person has already reviewed the applicant.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scoring_enthusiastic_yes_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_evaluations_count": {
            "description": "The number of form responses for the applicant.",
            "type": "integer",
            "format": "int32"
          },
          "scoring_form_id": {
            "type": "string"
          },
          "scoring_form_responses_url": {
            "type": "string"
          },
          "scoring_form_url": {
            "description": "The form for scoring/evaluating applicants.",
            "type": "string"
          },
          "scoring_inapplicable_experience_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_insufficient_experience_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_job_function_yet_needed_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_no_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_not_applicable_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_pass_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_underwhelming_materials_count": {
            "type": "integer",
            "format": "int32"
          },
          "scoring_yes_count": {
            "type": "integer",
            "format": "int32"
          },
          "sent_email_follow_up": {
            "type": "boolean"
          },
          "sent_email_received": {
            "type": "boolean"
          },
          "sheet_id": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "submitted_time": {
            "type": "string",
            "format": "date-time"
          },
          "value_reflected": {
            "type": "string"
          },
          "value_violated": {
            "type": "string"
          },
          "values_in_tension": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "type": "string"
          },
          "work_samples": {
            "type": "string"
          },
          "writing_samples": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "materials",
          "name",
          "resume",
          "role",
          "status",
          "submitted_time"
        ]
      },
      "AuthUser": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "blog": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "last_application_accessed": {
            "type": "string"
          },
          "last_ip": {
            "type": "string"
          },
          "last_login": {
            "type": "string",
            "format": "date-time"
          },
          "link_to_auth_user_logins": {
            "description": "link to another table in Airtable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "link_to_page_views": {
            "description": "link to another table in Airtable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "link_to_people": {
            "description": "link to another table in Airtable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "type": "string"
          },
          "login_provider": {
            "type": "string"
          },
          "logins_count": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone_verified": {
            "type": "boolean"
          },
          "picture": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "last_login",
          "logins_count",
          "updated_at",
          "user_id"
        ]
      },
      "Building": {
        "type": "object",
        "properties": {
          "address_formatted": {
            "type": "string"
          },
          "airtable_record_id": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "conference_rooms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "employees": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "floors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "geocode_cache": {
            "description": "This field is used by Airtable for mapping the location data.",
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "street_address": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ConferenceRoom": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "building": {
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "floor": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "link_to_building": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "capacity",
          "name",
          "type"
        ]
      },
      "GithubRepo": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "archive_url": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "assignees_url": {
            "type": "string"
          },
          "blobs_url": {
            "type": "string"
          },
          "branches_url": {
            "type": "string"
          },
          "clone_url": {
            "type": "string"
          },
          "collaborators_url": {
            "type": "string"
          },
          "comments_url": {
            "type": "string"
          },
          "commits_url": {
            "type": "string"
          },
          "compare_url": {
            "type": "string"
          },
          "contents_url": {
            "type": "string"
          },
          "contributors_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "default_branch": {
            "type": "string"
          },
          "deployments_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "downloads_url": {
            "type": "string"
          },
          "events_url": {
            "type": "string"
          },
          "fork": {
            "type": "boolean"
          },
          "forks_count": {
            "type": "integer",
            "format": "int32"
          },
          "forks_url": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "git_commits_url": {
            "type": "string"
          },
          "git_refs_url": {
            "type": "string"
          },
          "git_tags_url": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "github_id": {
            "type": "string"
          },
          "has_downloads": {
            "type": "boolean"
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "homepage": {
            "type": "string"
          },
          "hooks_url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "issue_comment_url": {
            "type": "string"
          },
          "issue_events_url": {
            "type": "string"
          },
          "issues_url": {
            "type": "string"
          },
          "keys_url": {
            "type": "string"
          },
          "labels_url": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "languages_url": {
            "type": "string"
          },
          "merges_url": {
            "type": "string"
          },
          "milestones_url": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notifications_url": {
            "type": "string"
          },
          "open_issues_count": {
            "type": "integer",
            "format": "int32"
          },
          "owner": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "pulls_url": {
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time"
          },
          "releases_url": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "ssh_url": {
            "type": "string"
          },
          "stargazers_count": {
            "type": "integer",
            "format": "int32"
          },
          "stargazers_url": {
            "type": "string"
          },
          "statuses_url": {
            "type": "string"
          },
          "subscribers_url": {
            "type": "string"
          },
          "subscription_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string"
          },
          "tags_url": {
            "type": "string"
          },
          "teams_url": {
            "type": "string"
          },
          "trees_url": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          },
          "watchers_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "created_at",
          "default_branch",
          "full_name",
          "name",
          "owner",
          "pushed_at",
          "stargazers_count",
          "updated_at"
        ]
      },
      "Group": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allow_external_members": {
            "description": "allow_external_members: Identifies whether members external to your organization can join the group. Possible values are: - true: G Suite users external to your organization can become members of this group. - false: Users not belonging to the organization are not allowed to become members of this group.",
            "type": "boolean"
          },
          "allow_web_posting": {
            "description": "allow_web_posting: Allows posting from web. Possible values are: - true: Allows any member to post to the group forum. - false: Members only use Gmail to communicate with the group.",
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "enable_collaborative_inbox": {
            "description": "Specifies whether a collaborative inbox will remain turned on for the group.",
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "is_archived": {
            "description": "is_archived: Allows the Group contents to be archived. Possible values are: - true: Archive messages sent to the group. - false: Do not keep an archive of messages sent to this group. If false, previously archived messages remain in the archive.",
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "who_can_discover_group": {
            "description": "who_can_discover_group: Specifies the set of users for whom this group is discoverable. Possible values are: - ANYONE_CAN_DISCOVER - ALL_IN_DOMAIN_CAN_DISCOVER - ALL_MEMBERS_CAN_DISCOVER",
            "type": "string"
          },
          "who_can_join": {
            "description": "who_can_join: Permission to join group. Possible values are: - ANYONE_CAN_JOIN: Anyone in the account domain can join. This includes accounts with multiple domains. - ALL_IN_DOMAIN_CAN_JOIN: Any Internet user who is outside your domain can access your Google Groups service and view the list of groups in your Groups directory. Warning: Group owners can add external addresses, outside of the domain to their groups. They can also allow people outside your domain to join their groups. If you later disable this option, any external addresses already added to users' groups remain in those groups. - INVITED_CAN_JOIN: Candidates for membership can be invited to join.\n\n- CAN_REQUEST_TO_JOIN: Non members can request an invitation to join.",
            "type": "string"
          },
          "who_can_moderate_members": {
            "description": "who_can_moderate_members: Specifies who can manage members. Possible values are: - ALL_MEMBERS - OWNERS_AND_MANAGERS - OWNERS_ONLY - NONE",
            "type": "string"
          },
          "who_can_post_message": {
            "description": "who_can_post_message: Permissions to post messages. Possible values are:\n\n- NONE_CAN_POST: The group is disabled and archived. No one can post a message to this group. - When archiveOnly is false, updating who_can_post_message to NONE_CAN_POST, results in an error. - If archiveOnly is reverted from true to false, who_can_post_messages is set to ALL_MANAGERS_CAN_POST. - ALL_MANAGERS_CAN_POST: Managers, including group owners, can post messages. - ALL_MEMBERS_CAN_POST: Any group member can post a message. - ALL_OWNERS_CAN_POST: Only group owners can post a message. - ALL_IN_DOMAIN_CAN_POST: Anyone in the account can post a message.\n\n- ANYONE_CAN_POST: Any Internet user who outside your account can access your Google Groups service and post a message. Note: When who_can_post_message is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam.",
            "type": "string"
          },
          "who_can_view_group": {
            "description": "who_can_view_group: Permissions to view group messages. Possible values are: - ANYONE_CAN_VIEW: Any Internet user can view the group's messages.\n\n- ALL_IN_DOMAIN_CAN_VIEW: Anyone in your account can view this group's messages. - ALL_MEMBERS_CAN_VIEW: All group members can view the group's messages. - ALL_MANAGERS_CAN_VIEW: Any group manager can view this group's messages.",
            "type": "string"
          },
          "who_can_view_membership": {
            "description": "who_can_view_membership: Permissions to view membership. Possible values are: - ALL_IN_DOMAIN_CAN_VIEW: Anyone in the account can view the group members list. If a group already has external members, those members can still send email to this group.\n\n- ALL_MEMBERS_CAN_VIEW: The group members can view the group members list. - ALL_MANAGERS_CAN_VIEW: The group managers can view group members list.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "JournalClubMeeting": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "coordinator": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "issue": {
            "type": "string"
          },
          "issue_date": {
            "type": "string",
            "format": "date"
          },
          "meeting_date": {
            "type": "string",
            "format": "date"
          },
          "papers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recording": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "issue",
          "title"
        ]
      },
      "Link": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string"
          },
          "name": {
            "description": "name will not be used in config files.",
            "type": "string"
          },
          "short_link": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "link"
        ]
      },
      "MailingListSubscriber": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "date_added": {
            "type": "string",
            "format": "date-time"
          },
          "date_last_changed": {
            "type": "string",
            "format": "date-time"
          },
          "date_optin": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "interest": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "link_to_people": {
            "description": "link to another table in Airtable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "(generated) name is a combination of first_name and last_name.",
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wants_newsletter": {
            "type": "boolean"
          },
          "wants_podcast_updates": {
            "type": "boolean"
          },
          "wants_product_updates": {
            "type": "boolean"
          }
        },
        "required": [
          "date_added",
          "date_last_changed",
          "date_optin",
          "email"
        ]
      },
      "RFD": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "authors": {
            "type": "string"
          },
          "commit_date": {
            "description": "commit_date is the date of the last commit that modified the file",
            "type": "string",
            "format": "date-time"
          },
          "content": {
            "type": "string"
          },
          "discussion": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "description": "link is the canonical link to the source.",
            "type": "string"
          },
          "milestones": {
            "description": "milestones only exist in Airtable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "(generated) name is a combination of number and title.",
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "number_string": {
            "description": "(generated) number_string is the long version of the number with leading zeros",
            "type": "string"
          },
          "pdf_link_github": {
            "type": "string"
          },
          "pdf_link_google_drive": {
            "type": "string"
          },
          "relevant_components": {
            "description": "relevant_components only exist in Airtable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rendered_link": {
            "description": "(generated) rendered_link is the link to the rfd in the rendered html website in the form of https://rfd.shared.oxide.computer/rfd/{{number_string}}",
            "type": "string"
          },
          "sha": {
            "description": "sha is the SHA of the last commit that modified the file",
            "type": "string"
          },
          "short_link": {
            "description": "(generated) short_link is the generated link in the form of https://{number}.rfd.oxide.computer",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "link",
          "number",
          "state",
          "title"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "airtable_record_id": {
            "type": "string"
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "aws_role": {
            "type": "string"
          },
          "birthday": {
            "description": "Birthday (automatically populated by Gusto)",
            "type": "string",
            "format": "date"
          },
          "building": {
            "type": "string"
          },
          "chat": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "geocode_cache": {
            "description": "This field is used by Airtable for mapping the location data.",
            "type": "string"
          },
          "github": {
            "type": "string"
          },
          "google_anniversary_event_id": {
            "description": "This field is automatically populated by airtable based on the user's start date.",
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "home_address_city": {
            "type": "string"
          },
          "home_address_country": {
            "type": "string"
          },
          "home_address_country_code": {
            "type": "string"
          },
          "home_address_formatted": {
            "type": "string"
          },
          "home_address_state": {
            "type": "string"
          },
          "home_address_street_1": {
            "description": "The following fields do not exist in the config files but are populated by the Gusto API before the record gets saved in the database. Home address (automatically populated by Gusto)",
            "type": "string"
          },
          "home_address_street_2": {
            "type": "string"
          },
          "home_address_zipcode": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "is_group_admin": {
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "link_to_building": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "link_to_manager": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "manager": {
            "type": "string"
          },
          "public_ssh_keys": {
            "description": "The following field does not exist in the config files but is populated by the GitHub API before the record gets saved in the database.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recovery_email": {
            "type": "string"
          },
          "recovery_phone": {
            "type": "string"
          },
          "start_date": {
            "description": "Start date (automatically populated by Gusto)",
            "type": "string",
            "format": "date"
          },
          "twitter": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "work_address_city": {
            "type": "string"
          },
          "work_address_country": {
            "type": "string"
          },
          "work_address_country_code": {
            "type": "string"
          },
          "work_address_formatted": {
            "type": "string"
          },
          "work_address_state": {
            "type": "string"
          },
          "work_address_street_1": {
            "description": "The following fields do not exist in the config files but are populated automatically based on the user's location.",
            "type": "string"
          },
          "work_address_street_2": {
            "type": "string"
          },
          "work_address_zipcode": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "username"
        ]
      }
    }
  }
}